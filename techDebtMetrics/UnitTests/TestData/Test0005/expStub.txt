 package cats {
   path: command-line-arguments;

   Cat: class {
      Data struct {
         Name string;
         Age int;
      }
      Meow();
      String() => string;
   };

   Toy: interface: any {
      Play(c interface<T any>: any {
         $deref<T any>() => T;
      }<Cat: class {
         Data struct {
            Name string;
            Age int;
         }
         Meow();
         String() => string;
      }>);
   };

   Cats: class {
      Data interface<T any>: any {
         $cap() => int;
         $get<T any>(index int) => T;
         $len() => int;
         $set<T any>(index int, value T);
      }<interface<T any>: any {
         $deref<T any>() => T;
      }<Cat: class {
         Data struct {
            Name string;
            Age int;
         }
         Meow();
         String() => string;
      }>>
      Youngest() => interface<T any>: any {
         $deref<T any>() => T;
      }<Cat: class {
         Data struct {
            Name string;
            Age int;
         }
         Meow();
         String() => string;
      }>;
   };

   log (value string);

   NewCat(name string, age int) => interface<T any>: any {
      $deref<T any>() => T;
   }<Cat: class {
      Data struct {
         Name string;
         Age int;
      }
      Meow();
      String() => string;
   }>;

   NextYear(cats interface<T any>: any {
      $cap() => int;
      $get<T any>(index int) => T;
      $len() => int;
      $set<T any>(index int, value T);
   }<interface<T any>: any {
      $deref<T any>() => T;
   }<Cat: class {
      Data struct {
         Name string;
         Age int;
      }
      Meow();
      String() => string;
   }>> ...);

   Pet(c interface<T any>: any {
      $deref<T any>() => T;
   }<Cat: class {
      Data struct {
         Name string;
         Age int;
      }
      Meow();
      String() => string;
   }>);
}
