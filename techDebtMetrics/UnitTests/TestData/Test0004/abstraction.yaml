# This abstraction is the same as goAbstractor/tests/test0004/expected.yaml
{
  language: go,
  packages: [
    {
      path: command-line-arguments,
      name: main,
      methods: [
        { # func main()
          name: main, signature: 10,
          metrics: { codeCount: 3, complexity: 1, indents: 1, lineCount: 3 }
        }
      ],
      types: [
        { name: Animal, interface: 4, type: 4 }, # type Animal interface { Age() }
        { name: Bird,   interface: 5, type: 5 }, # type Bird interface { Animal; Fly() }
        { name: Mammal, interface: 6, type: 6 }, # type Bird interface { Animal; Temp() float64 }
        { name: Bat,    interface: 7, type: 7 }, # type Bat interface { Mammal; Fly() }
        { name: Flier,  interface: 8, type: 8 }  # type Flier interface { Fly() }
      ]
    }
  ],
  types: {
    basics: [
      int,    # 1. int
      float64 # 2. float64
    ],
    interfaces: [
      {}, # 3. any
      { # 4. interface { Age() int }
        inherits: [ 3 ],
        methods: {
          Age: 9
        }
      },
      { # 5. interface { Age() int; Fly() }
        inherits: [ 4 ],
        methods: {
          Age: 9,
          Fly: 10
        }
      },
      { # 6. interface { Age() int; Temp() float64 }
        inherits: [ 4 ],
        methods: {
            Age:  9,
            Temp: 11
          }
      },
      { # 7. interface { Age() int; Fly(); Temp() float64 }
        inherits: [ 5, 6 ],
        methods: {
          Age:  9,
          Fly:  10,
          Temp: 11
        }
      },
      { # 8. interface { Fly() }
        inherits: [ 3 ],
        methods: {
          Fly: 10
        }
      }
    ],
    signatures: [
      { return: 1 }, # 9. func() int
      {},            # 10. func()()
      { return: 2 }  # 11. func() float64
    ],
  }
}
