{
  language: go,
  abstracts: [
    { name: $get, signature: 3, exported: true }, # 1. func $get(index int)(value int)
    { name: $get, signature: 4, exported: true }, # 2. func $get(index int)(value T<any>)
    { name: $len, signature: 2, exported: true }, # 3. func $len() int
    { name: $set, signature: 5, exported: true }, # 4. func $set(index int, value int)
    { name: $set, signature: 6, exported: true }  # 5. func $set(index int, value T<any>)
  ],
  arguments: [
    {               type: basic1 }, # 1. <unnamed> int
    { name: index,  type: basic1 }, # 2. index int
    { name: value,  type: basic1 }, # 3. value int
    { name: value,  type: typeParam1     }, # 4. value T<any>
    { name: values, type: interfaceInst1 }  # 5. value List[int]
  ],
  basics: [
    int # 1. int
  ],
  interfaceDecls: [
    { # 1. $builtin.List[T any]
      name: List, package: 1, interface: 3, exported: true,
      typeParams: [ 1 ], instances: [ 1 ]
    }
  ],
  interfaceDescs: [
    {}, # 1. interface{}
    {   # 2. interface{ $len()int; $get(int)int; $set(int,int) }
      abstracts: [ 3, 1, 4 ],
      inherits:  [ 1 ],
      hint: list
    }, 
    { # 3. interface{ $len()int; $get(int)T; $set(int,T) }
      abstracts: [ 3, 2, 5 ],
      inherits:  [ 1 ],
      hint: list
    }
  ],
  interfaceInsts: [
    { # 1. List[int]
      generic: 1,
      instanceTypes: [ basic1 ],
      resolved: 2
    }
  ],
  methods: [
    { # 1. func first(values ...int) int @ main.go:13
      name: first, package: 2, signature: 7, loc: 13, metrics: 2
    },
    { # 2. func last(values ...int) int @ main.go:17
      name: last, package: 2, signature: 7, loc: 17, metrics: 3
    },
    { # 3. func main() @ main.go:21
      name: main, package: 2, signature: 1, loc: 21, metrics: 4
    },
    { # 4. func sum(values ...int) int @ main.go:5
      name: sum, package: 2, signature: 7, loc: 5, metrics: 1
    }
  ],
  metrics: [
    { # 1.
      codeCount: 7, complexity: 2, indents: 6, lineCount: 7, loc: 5
    },
    { # 2.
      codeCount: 3, complexity: 1, indents: 1, lineCount: 3, loc: 13
    },
    { # 3.
      codeCount: 3, complexity: 1, indents: 1, lineCount: 3, loc: 17
    },
    { # 4.
      codeCount: 6, complexity: 1, indents: 4, lineCount: 6, loc: 21,
      sideEffect: true, invokes: [ method1, method2, method4 ]
    }
  ],
  packages: [
    { # 1. $builtin package
      path: $builtin,
      name: $builtin,
      interfaces: [ 1 ]
    },
    { # 2. main package
      path: command-line-arguments,
      name: main,
      methods: [ 1, 2, 3, 4 ]
    }
  ],  
  signatures: [
    {}, # 1. func()()
    {   # 2. func() int
      results: [ 1 ]
    },
    { # 3. func(index int)(value int)
      params: [ 2 ], results: [ 3 ]
    },
    { # 4. func(index int)(value T<any>)
      params: [ 2 ], results: [ 4 ]
    },
    { # 5. func(index int, value int)
      params: [ 2, 3 ]
    },
    { # 6. func(index int, value T<any>)
      params: [ 2, 4 ]
    },
    { # 7. func(value ...int<List[int]>) int
      params: [ 5 ], variadic: true, results: [ 1 ]
    }
  ],
  typeParams: [
    { name: T, type: interfaceDesc1 } # 1. T any
  ],
  locs: {
    '1': main.go
  }
}
