{
  language: go,
  abstracts: [
    { name: $get, signature: 26 }, # 1. func $get(index int)(value int)
    { name: $get, signature: 27 }, # 2. func $get(index int)(value T<any>)
    { name: $len, signature: 25 }, # 3. func $len() int
    { name: $set, signature: 28 }, # 4. func $set(index int, value int)
    { name: $set, signature: 29 }  # 5. func $set(index int, value T<any>)
  ],
  arguments: [
    {               type: 11 }, #  6. <unnamed> int
    { name: index,  type: 11 }, #  7. index int
    { name: value,  type: 11 }, #  8. value int
    { name: value,  type: 31 }, #  9. value T<any>
    { name: values, type: 12 }  # 10. value List[int]
  ],
  basics: [
    int # 11. int
  ],
  instances: [
    { # 12. List[int]
      generic: 13,
      instanceTypes: [ 11 ],
      resolved: 16
    }
  ],
  interfaceDecls: [
    { # 13. $builtin.List[T any]
      name: List,
      package: 22,
      typeParams: [ 31 ],
      interface: 17,
      instances: [ 12 ]
    },
    { # 14. $builtin.any interface{}
      name: any,
      package: 22,
      interface: 15
    }
  ],
  interfaceDescs: [
    {}, # 15. interface{}
    { abstracts: [ 3, 1, 4 ] }, # 16. interface{ $len()int; $get(int)int; $set(int,int) }
    { abstracts: [ 3, 2, 5 ] }  # 17. interface{ $len()int; $get(int)T; $set(int,T) }
  ],
  methods: [
    { # 18. func first(values ...int) int @ main.go:13
      name: first, package: 23, signature: 30, loc: 13,
      metrics: { codeCount: 3, complexity: 1, indents: 1, lineCount: 3 }
    },
    { # 19. func last(values ...int) int @ main.go:17
      name: last, package: 23, signature: 30, loc: 17,
      metrics: { codeCount: 3, complexity: 1, indents: 1, lineCount: 3 }
    },
    { # 20. func main() @ main.go:21
      name: main, package: 23, signature: 24, loc: 21,
      metrics: { codeCount: 6, complexity: 1, indents: 4, lineCount: 6 }
    },
    { # 21. func sum(values ...int) int @ main.go:5
      name: sum, package: 23, signature: 30, loc: 5,
      metrics: { codeCount: 7, complexity: 2, indents: 6, lineCount: 7 }
    }
  ],
  packages: [
    { # 22. $builtin package
      path: $builtin,
      name: $builtin,
      interfaces: [ 13, 14 ]
    },
    { # 23. main package
      path: command-line-arguments,
      name: main,
      methods: [ 18, 19, 20, 21 ]
    }
  ],  
  signatures: [
    {}, # 24. func()()
    {   # 25. func() int
      results: [ 6 ]
    },
    { # 26. func(index int)(value int)
      params: [ 7 ], results: [ 8 ]
    },
    { # 27. func(index int)(value T<any>)
      params: [ 7 ], results: [ 9 ]
    },
    { # 28. func(index int, value int)
      params: [ 7, 8 ]
    },
    { # 29. func(index int, value T<any>)
      params: [ 7, 9 ]
    },
    { # 30. func(value ...int<List[int]>) int
      params: [ 10 ], variadic: true, results: [ 6 ]
    }
  ],
  typeParams: [
    { name: T, type: 14 } # 31. T any
  ],
  locs: {
    '1': main.go
  }
}
