{
  language: go,
  abstracts: [
    { name: Pet, signature: 1, exported: true }  # 1. func Pet()()
  ],
  basics: [
    string # 1. string
  ],
  fields: [
    { name: Name, type: basic1, exported: true } # 1. Name string
  ],
  interfaceDecls: [
    { # 1. main.Animal interface { Pet() } @ main.go:5
      name: Animal, package: 1, interface: 1, loc: 5, exported: true,
    }
  ],
  interfaceDescs: [
    { abstracts: [ 1 ] } # 1. interface { Pat() }
  ],
  methods: [
    { # 1. Cat.Pet() @ main.go:13
      name: Pet, package: 1, receiver: 1, signature: 1,
      metrics: 1, loc: 13, exported: true
    },
    { # 2. main() @ main.go:17
      name: main, package: 1, signature: 1,
      metrics: 2, loc: 17,
    }
  ],
  metrics: [
    { # 1. Cat.Pet()
      codeCount: 3, complexity: 1, indents: 1, lineCount: 3, loc: 13,
      sideEffect: true, # b/c println
      reads: [ object1, selection1 ]
    },
    { # 2. main()
      codeCount: 6, complexity: 1, indents: 5, lineCount: 6, loc: 17,
      invokes: [ selection2 ],
      reads:   [ object1 ],
      writes:  [ object1, selection1 ]
    }
  ],
  objects: [
    { # 1. Cat struct { Name string }{ Pet() }
      name: Cat, package: 1, data: 1, interface: 1, loc: 9, exported: true,
      methods: [ 1 ]
    }
  ],
  packages: [
    { # 1. main package
      name: main, path: command-line-arguments,
      interfaces: [ 1 ],
      methods:    [ 1, 2 ],
      objects:    [ 1 ]
    }
  ],
  selections: [
    { name: Name, origin: object1 }, # 1. Cat.Name
    { name: Pet,  origin: object1 }  # 2. Cat.Pet()
  ],
  signatures: [
    {}, # 1. func()()
  ],
  structDescs: [
    { fields: [ 1 ] } # 1. struct { Name string}
  ],
  locs: {
    '1': main.go
  }
}
