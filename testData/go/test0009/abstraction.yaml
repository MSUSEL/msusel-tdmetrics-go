{
  language: go,
  abstracts: [
    { # 1. Mul(v T) T <int|float64|string>
      name: Mul, signature: 2, exported: true
    }
  ],
  arguments: [
    { type: typeParam1 },         # 1. <unnamed> T <int|float64|string>
    { name: v, type: typeParam1 } # 2. v T <int|float64|string>
  ],
  basics: [ int, float64, string ],
  fields: [
    { name: value, type: basic1 } # 1. value int
  ],
  interfaceDescs: [
    {}, # 1. any
    {   # 2. int|float64|string
      exact: [ basic1, basic2, basic3 ],
      inherits: [ 1 ]
    },
    { # 3. interface{ Mul(v T) T <int|float64|string> }
      abstracts: [ 1 ],
      inherits:  [ 1 ]
    }
  ],
  methods: [
    { # 1. func (A) Mul(v T) T <int|float64|string>
      name: Mul, exported: true, loc: 12,
      metrics: 1, package: 1, receiver: 1, signature: 2
    },
    { # 2. func main()
      name: main, loc: 28,
      metrics: 2, package: 1, signature: 1
    }
  ],
  metrics: [
    { # 1. A.Mul(v T) T metrics
      codeCount: 15, complexity: 5, indents: 21, lineCount: 15, loc: 12,
      reads: [ object1, selection7 ]
    },
    { # 2. main() metrics
      codeCount: 5, complexity: 1, indents: 3, lineCount: 5, loc: 28,
      sideEffect: true,
      invokes: [ selection1, selection2, selection3 ],
      reads:   [ object1, objectInst1, objectInst2, objectInst3 ],
      writes:  [ selection4, selection5, selection6 ]
    }
  ],
  objectInsts: [
    { # 1. A[int]
      generic: 1, resolved: 1,
      instanceTypes: [ basic1 ]
    },
    { # 2. A[float64]
      generic: 1, resolved: 1,
      instanceTypes: [ basic2 ]
    },
    { # 3. A[string]
      generic: 1, resolved: 1,
      instanceTypes: [ basic3 ]
    }
  ],
  objects: [
    { # 1. A { value int }{ Mul(v T) T <int|float64|string> }
      name: A, package: 1, data: 1, interface: 3, loc: 8,
      exported: true,
      instances:  [ 1, 2, 3 ],
      methods:    [ 1 ],
      typeParams: [ 1 ]
    }
  ],
  packages: [
    { # 1. main package
      name: main, path: command-line-arguments,
      methods: [ 1, 2 ],
      objects: [ 1 ]
    }
  ],
  selections: [
    { name: Mul,   origin: objectInst1 }, # 1. A[int].Mul
    { name: Mul,   origin: objectInst2 }, # 2. A[float64].Mul
    { name: Mul,   origin: objectInst3 }, # 3. A[string].Mul
    { name: value, origin: objectInst1 }, # 4. A[int].value
    { name: value, origin: objectInst2 }, # 5. A[float64].value
    { name: value, origin: objectInst3 }, # 6. A[string].value
    { name: value, origin: object1 }      # 7. A[T].value
  ],
  signatures: [
    {},                               # 1. func()()
    { params: [ 2 ], results: [ 1 ] } # 2. func(v T) T <int|float64|string>
  ],
  structDescs: [
    { fields: [ 1 ] } # 1. struct{ value int }
  ],
  typeParams: [
    { name: T, type: interfaceDesc2 } # 1. T int|float64|string
  ],
  locs: {
    '1': main.go
  }
}
