{
  language: java,
  abstracts: [
    { name: clone,     signature: 5 }, #  1. clone() Object
    { name: equals,    signature: 8 }, #  2. equals(arg0 Object) boolean
    { name: finalize,  signature: 1 }, #  3. finalize()
    { name: getClass,  signature: 3 }, #  4. getClass() any
    { name: hashCode,  signature: 2 }, #  5. hashCode() int
    { name: notify,    signature: 1 }, #  6. notify()
    { name: notifyAll, signature: 1 }, #  7. notifyAll()
    { name: toString,  signature: 3 }, #  8. toString() any
    { name: wait,      signature: 1 }, #  9. wait()
    { name: wait,      signature: 6 }, # 10. wait(arg0 long)
    { name: wait,      signature: 7 }  # 11. wait(arg0 long, arg1 int)
  ],
  arguments: [
    {             type: basic1         }, # 1. <unnamed> boolean
    {             type: basic2         }, # 2. <unnamed> int
    {             type: interfaceDesc3 }, # 3. <unnamed> any
    {             type: object1        }, # 4. <unnamed> EntryPoint
    {             type: object2        }, # 5. <unnamed> Object
    { name: arg0, type: basic3         }, # 6. arg0 long
    { name: arg0, type: object2        }, # 7. arg0 Object
    { name: arg1, type: basic2         }  # 8. arg1 int
  ],
  basics: [ boolean, int, long ],
  interfaceDescs: [
    { # 1. interface for EntryPoint
      abstracts: [ 1, 10, 11, 2, 3, 4, 5, 6, 7, 8, 9 ],
      pin: object1,
    },
    { # 2. interface for Object
      abstracts: [ 1, 10, 11, 2, 3, 4, 5, 6, 7, 8, 9 ],
      pin: object2,
    },
    { # 3. any
      abstracts: [ ],
    },
  ],
  methods: [
    { name: EntryPoint, package: 5, receiver: 1, signature: 4, vis: public    }, # 1. EntryPoint() EntryPoint
    { name: Object,     package: 2, receiver: 2, signature: 5, vis: public    }, # 2. Object() Object
    { name: clone,      package: 2, receiver: 2, signature: 5, vis: protected }, # 3. clone() Object
    { name: equals,     package: 2, receiver: 2, signature: 8, vis: public    }, # 4. equals(arg0 Object) boolean
    { name: finalize,   package: 2, receiver: 2, signature: 1, vis: protected }, # 5. finalize()
    { name: getClass,   package: 2, receiver: 2, signature: 3, vis: public    }, # 6. getClass() any # TODO: should this return any?
    { name: hashCode,   package: 2, receiver: 2, signature: 2, vis: public    }, # 7. hashCode() int
    { # 8. main()
      name: main, package: 5, receiver: 1, signature: 1,
      metrics: 1, loc: 4, vis: public
    },
    { name: notify,    package: 2, receiver: 2, signature: 1, vis: public }, #  9. notify()
    { name: notifyAll, package: 2, receiver: 2, signature: 1, vis: public }, # 10. notifyAll()
    { name: toString,  package: 2, receiver: 2, signature: 3, vis: public }, # 11. toString() any # TODO: should this return any?
    { name: wait,      package: 2, receiver: 2, signature: 1, vis: public }, # 12. wait()
    { name: wait,      package: 2, receiver: 2, signature: 6, vis: public }, # 13. wait(arg0 long)
    { name: wait,      package: 2, receiver: 2, signature: 7, vis: public }  # 14. wait(arg0 long, arg1 int)
  ],
  metrics: [
    { # 1. EntryPoint.main metrics
      loc: 4, codeCount: 3, complexity: 1, indents: 1, lineCount: 3
    }
  ],
  objects: [
    { # 1. EntryPoint
      name: EntryPoint, package: 5, data: 1, interface: 1, loc: 3, vis: public,
      methods: [ 1, 8 ]
    },
    { # 2. Object
      name: Object, package: 2, data: 1, interface: 2, vis: public,
      methods: [ 10, 11, 12, 13, 14, 2, 3, 4, 5, 6, 7, 9 ]
    }
  ],
  packages: [
    { }, # 1. <unnamed> # TODO: Needs Imports to contained packages?
    {    # 2. build-in package
      name: java.lang,
      methods: [ 10, 11, 12, 13, 14, 2, 3, 4, 5, 6, 7, 9 ],
      objects: [ 2 ]
    },
    { name: testData      }, # 3. testData
    { name: testData.java }, # 4. testData.java
    { # 5. testData.java.test0001
      name: testData.java.test0001,
      methods: [ 1, 8 ],
      objects: [ 1 ]
    }
  ],
  signatures: [
    {                               }, # 1. func()
    {                results: [ 2 ] }, # 2. func() int
    {                results: [ 3 ] }, # 3. func() any
    {                results: [ 4 ] }, # 4. func() EntryPoint
    {                results: [ 5 ] }, # 5. func() Object
    { params: [ 6 ]                 }, # 6. func(arg0 long)
    { params: [ 6, 8 ]              }, # 7. func(arg0 long, arg1 int)
    { params: [ 7 ], results: [ 1 ] }  # 8. func(arg0 Object) boolean
  ],
  structDescs: [
    {} # 1. struct{}
  ],
  locs: {
    1: EntryPoint.java
  }
}
